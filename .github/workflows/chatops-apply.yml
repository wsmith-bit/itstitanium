name: Apply patch from comment

on:
  issue_comment:
    types: [created]
  workflow_dispatch: {}  # allow manual runs for testing

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  apply:
    # Run if manually dispatched OR the comment body contains /apply anywhere
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       contains(github.event.comment.body, '/apply'))
    runs-on: ubuntu-latest

    steps:
      - name: Show event context
        run: |
          echo "event=${{ github.event_name }}"
          echo "actor=${{ github.actor }}"
          echo "repo=${{ github.repository }}"
          echo "ref=${{ github.ref }}"

      - name: Show comment body (if any)
        if: github.event_name == 'issue_comment'
        env:
          BODY: ${{ github.event.comment.body }}
        run: |
          echo '---- COMMENT BODY START ----'
          echo "$BODY" | sed -e 's/^/| /'
          echo '---- COMMENT BODY END ----'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git identity
        run: |
          git config user.name  "itstitanium-bot"
          git config user.email "bot@users.noreply.github.com"

      - name: Extract diff block to file
        id: extract
        if: github.event_name == 'issue_comment'
        env:
          BODY: ${{ github.event.comment.body }}
        run: |
          python - << 'PY'
          import os, re, sys, pathlib
          body = os.environ.get('BODY','')
          m = re.search(r'```diff\s*(.*?)```', body, re.S|re.M)
          if not m:
              print("::error::No ```diff``` block found. Start your comment with /apply and include a fenced ```diff``` block.")
              sys.exit(1)
          pathlib.Path('/tmp/ai.patch').write_text(m.group(1), encoding='utf-8')
          print("Wrote /tmp/ai.patch")
          PY

      - name: Apply patch (comment-trigger only)
        if: github.event_name == 'issue_comment'
        run: |
          set -e
          git apply --whitespace=fix /tmp/ai.patch
          git status --porcelain

      - name: Commit & push branch
        run: |
          set -e
          BRANCH="ai/update-${{ github.run_id }}"
          git checkout -b "$BRANCH"
          git add -A
          if git diff --cached --quiet; then
            git commit --allow-empty -m "AI patch (empty commit) ${{ github.run_id }}"
          else
            git commit -m "AI patch from comment or manual run ${{ github.run_id }}"
          fi
          git push -u origin "$BRANCH"

      - name: Open PR via API
        uses: actions/github-script@v7
        with:
          script: |
            const branch = `ai/update-${process.env.GITHUB_RUN_ID}`;
            const {owner, repo} = context.repo;
            const res = await github.rest.pulls.create({
              owner, repo,
              title: `AI patch ${process.env.GITHUB_RUN_ID}`,
              head: branch,
              base: 'main',
              body: `Source: ${context.serverUrl}/${owner}/${repo}\nEvent: ${context.eventName}`
            });
            core.info(`PR #${res.data.number}: ${res.data.html_url}`);
